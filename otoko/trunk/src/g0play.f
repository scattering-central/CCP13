      SUBROUTINE G0PLAY(LINE)
C
C          ------------------------------------------------
C          ROUTINE NO. ( 234)   VERSION (A7.6)    11:FEB:85
C          ------------------------------------------------
C
C          THIS DRAWS TICK MARKS AND (OPTIONALLY) AN AXIS LINE,
C          WITH LINEAR MARKINGS ALONG THE Y-DIRECTION.
C
C          <LINE>   CONTROLS WHETHER THE AXIS LINE IS DRAWN:
C                   IF ZERO, ONLY TICK MARKS ARE DRAWN,
C                   OTHERWISE, THE AXIS LINE IS ALSO DONE.
C
C
C          THE FOLLOWING ARGUMENTS ARE SUPPLIED THROUGH COMMON:
C
C          <NOTATA> IF ZERO, NO ANNOTATION IS REQUIRED,
C                   IF NON-ZERO, ANNOTATION IS DONE.
C          <AXPOSY> THE POSITION OF THE Y-AXIS ALONG X.
C          <DIVLY>  IS THE Y-AXIS SUB-INTERVAL SIZE.
C          <NSKIPY> IS THE NO. OF SUB-INTERVALS PER MAJOR INTERVAL IN Y.
C          <NTIKLY> IS THE MARKING START-POINT FOR THE Y-AXIS.
C          <NTIKHY> IS THE MARKING END-  POINT FOR THE Y-AXIS.
C          <NDECSY> IS THE Y-AXIS ANNOTATION BASIS-EXPONENT.
C          <NCHRSY> IS THE NO. OF CHARS. IN Y-AXIS ANNOTATION.
C          <NAFTPY> IS THE NO. OF CHARS. AFTER THE DEC. PT. IN Y.
C          <KANNY>  GIVES THE Y-AXIS ANNOTATION TYPE, AS FOLLOWS:
C                   = 1, IT IS INTEGER
C                   = 2, IT IS REAL,
C                   = 3, IT IS INTEGER WITH MULT. FACTOR.
C                   = 4, IT IS REAL    WITH MULT. FACTOR.
C          <KAXIS>  INDICATES WHETHER ANNOTATION MAY BE SUPPRESSED:
C                   > 0, NO, OR
C                   < 0, YES, IF IT INTERFERES WITH THE OTHER AXIS.
C          <TKEN1A> AND
C          <TKEN1B> ARE THE END-POINTS OF THE 5/1000TH.-SIZE TICK MARK.
C          <TKEN2A> AND
C          <TKEN2B> ARE THE END-POINTS OF THE 8/1000TH.-SIZE TICK MARK.
C
C
      REAL    RDATA(1)
      INTEGER IDECFC(3)
C
      COMMON /T0AARG/ KAXIS
      COMMON /T0ADIY/ DIVLY,NTIKLY,NTIKHY
      COMMON /T0ANOD/ KDIRX,KDIRY
      COMMON /T0ANOY/ KANNY,NCHRSY,NAFTPY
      COMMON /T0APOS/ AXPOSX,AXPOSY
      COMMON /T0ASKY/ NSKIPY,NDECSY
      COMMON /T0ATIK/ TKEN1A,TKEN1B,TKEN2A,TKEN2B
      COMMON /T0CFON/ KFONT0
      COMMON /T0NOTA/ NOTATA
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
C
      DATA RDATA /0.0/, IDECFC /120,49,48/
C
C
C          THE AXIS LINE IS DRAWN HERE, IF REQUIRED.
C
      IF (LINE.EQ.0) GO TO 1
      CALL POSITN(AXPOSY,Y1WND0)
      CALL   JOIN(AXPOSY,Y2WND0)
C
C          THE NO. OF TICK MARKS IS CALCULATED, AND IF NONE EXIST,
C          NO MORE NEED BE DONE. OTHERWISE, THE CURRENT FONT NO.
C          IS SAVED, THE SCALING FACTOR IS CALCULATED, AND THE
C          INITIAL SUB-INTERVAL COUNT IS SET UP. LOOP-100 THEN
C          DRAWS EACH TICK MARK (OF THE APPROPRIATE SIZE) IN TURN,
C          ALSO ANNOTATING THE MAJOR INTERVALS AS REQUIRED.
C
    1 NTICKS= NTIKHY-NTIKLY+1
      IF (NTICKS.LE.0)         RETURN
C
      KFONT= KFONT0
      IF (NOTATA.NE.0) CALL CTRFNT(1)
C
      IF (NOTATA.NE.0) FACTOR= 10.0**(-NDECSY)
      IMISS= NTIKHY/NSKIPY
      IMISS= IMISS*NSKIPY-NTIKHY-1
      IF (NTIKHY.GE.0) IMISS= IMISS+NSKIPY
      IF (IMISS.LT.0) IMISS= NSKIPY
C======ANNOTATE EVERY OTHER TICK MARK
C======THIS ALLOWS LARGER CHARACTERS
CX      DO 100 ITICK= 1,NTICKS
      DO 100 ITICK= 1,NTICKS,2
        YPOS= DIVLY*(NTIKHY-ITICK+1)
        TKENDA= TKEN1A
        TKENDB= TKEN1B
        IMISS= IMISS+1
        IF (IMISS.LT.NSKIPY) GO TO 2
        IMISS= 0
        TKENDA= TKEN2A
        TKENDB= TKEN2B
C
C          THE APPROPRIATE-SIZE TICK MARK IS DRAWN. IF ANNOTATION
C          IS NOT REQUIRED, OR IF THIS POSITION IS NOT ON A MAJOR
C          INTERVAL, LOOP-100 CONTINUES WITH THE NEXT TICK MARK.
C
    2   CALL POSITN(TKENDA,YPOS)
        CALL   JOIN(TKENDB,YPOS)
C
        IF (NOTATA.EQ.0) GO TO 100
        IF (IMISS.NE.0)  GO TO 100
C
C          THIS SECTION SUPPRESSES ANNOTATION (IF REQUIRED)
C          WHEN THE Y-AXIS IS WITHIN THE WINDOW AREA AND THE
C          CURRENT TICK POSITION IS TOO CLOSE TO THE X-AXIS.
C
        IF (KAXIS.GT.0)                           GO TO 3
        IF (AXPOSY.EQ.X1WND0.AND.KDIRX.LE.0)      GO TO 3
        IF (AXPOSY.EQ.X2WND0.AND.KDIRX.GE.1)      GO TO 3
        YDIFF= ABS(YPOS-AXPOSX)
        IF (YDIFF.GT.0.25*DIVLY)                   GO TO 3
        IF (YDIFF.LT.0.05*ABS(Y2WND0-Y1WND0))     GO TO 100
C
C          WHEN ANNOTATION IS TO BE DONE, THE POSITION IS SET,
C          THE APPROPRIATE FORMAT SELECTED, AND THE VALUE PRINTED.
C
    3   CALL POSITN(AXPOSY,YPOS)
        IF (KDIRY.LE.0)  CALL SPACE(-NCHRSY-1)
        IF (KDIRY.GE.1)  CALL SPACE(2)
C
        VALUE= YPOS
        IF (KANNY.GT.2) VALUE= FACTOR*VALUE
        IF (KANNY.EQ.2.OR.KANNY.EQ.4) GO TO 4
C
        IVALUE= VALUE+SIGN(0.5,VALUE)
        CALL TYPENI(IVALUE)
        GO TO 100
C
    4   CALL TYPENF(VALUE,NAFTPY)
  100 CONTINUE
C
C          IF THE FORMAT REQUIRES A MULTIPLYING FACTOR,
C          ITS POSITION IS SET AND ITS VALUE PRINTED.
C
      IF (NOTATA.EQ.0) RETURN
      IF (KANNY.LT.3) GO TO 7
C
      IF ((Y1WND0-AXPOSX)*(Y2WND0-AXPOSX).GE.0.0) GO TO 5
      START= AXPOSX
      WIDE= Y2WND0
      IF (ABS(Y2WND0).LT.ABS(0.9*Y1WND0)) WIDE= Y1WND0
      GO TO 6
C
    5 START= Y1WND0
      WIDE= Y2WND0-Y1WND0
C
    6 MULTPT= (0.6667*WIDE+START)/DIVLY
      YPOS= MULTPT*DIVLY
      CALL POSITN(AXPOSY,YPOS)
      IF (KDIRY.LE.0) CALL SPACE(-NCHRSY-5)
      IF (KDIRY.GE.1) CALL SPACE(NCHRSY+3)
      CALL G3LINK(2,11,-3,IDECFC,RDATA)
      CALL SUPFIX
      IF (NDECSY.GE.0) CALL SPACE(-1)
      CALL TYPENI(NDECSY)
      CALL NORMAL
C
C          THE PREVIOUS FONT NO. IS RESTORED BEFORE ENDING.
C
    7 CALL CTRFNT(KFONT)
C
      RETURN
      END
