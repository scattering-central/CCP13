C     LAST UPDATE 21/05/87
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C 
      SUBROUTINE ISOMET (ITERM,IPRINT,BUFF,NPIX,NRAST)
C
C PURPOSE: PLOT A 2-D DATASET AS 3-D SURFACE
C
      REAL    BUFF(1)
      INTEGER NPIX,NRAST,ITERM,IPRINT
C
C BUFF   : IMAGE ARRAY
C NPIX   : NOS. OF PIXELS IN IMAGE
C NRAST  : NOS. OF RASTERS IN IMAGE
C ITERM  : TERMINAL INPUT
C IPRINT : TERMINAL OUTPUT
C
C 
C CALLS   4: GETVAL , GRMODE , TRMODE , SAVPLO
C GHOST  13: SURSCA , SURDIR , SURBAS , SURANG , SURAXE , SURPLT
C            SURPLT , PICNOW , ERASE  , PAPER  , FILON  , PSPACE
C            CTRMAG
C CALLED BY:
C
C-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
C LOCAL VARIABLES:
C 
      REAL    RMIN,RMAX,TMIN,TMAX,VALUE(10),ANGLE,PITCH,DUMMY,AZIM
      INTEGER NVAL,IUNDR
      INTEGER IFPIX,ILPIX,IFRAST,ILRAST
C
C RMIN   : MINIMUM VALUE OF IMAGE
C RMAX   : MAXIMUM VALUE OF IMAGE
C TMIN   : THRESHOLD MINIMUM
C TMAX   : THRESHOLD MAXIMUM
C VALUE  : VALUES ENTERED AT TERMINAL
C ITEMP  : TEMPORY VARIABLE
C NVAL   : NUMBER OF VALUES ENTERED AT TERMINAL
C ANGLE  : VIEWING ANGLE
C AZIM  : VIEWING DIRECTION
C DUMMY  : DUMMY ARGUMENT
C PITCH  :
C
C-----------------------------------------------------------------------
      ICALL=0
C
C========PART OF AN IMAGE TO DISPLAY?
C
5     WRITE (IPRINT,1000) NPIX,NRAST
      IFPIX=1
      ILPIX=NPIX
      IFRAST=1
      ILRAST=NRAST
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 5
      IF (NVAL.GT.0) IFPIX=INT(VALUE(1))
      IF (NVAL.GT.1) ILPIX=INT(VALUE(2))
      IF (NVAL.GT.2) IFRAST=INT(VALUE(3))
      IF (NVAL.GT.3) ILRAST=INT(VALUE(4))
C
C========TRUNCATE OR COMPRESS IMAGE
C
CX      ISIZE=512
CX      IF (IQUAD.NE.0) THEN
CX         ISIZE=256
CX         IF ((ILPIX-IFPIX+1).GT.256.OR.(ILRAST-IFRAST+1).GT.256) THEN
CX15          WRITE (IPRINT,1020)
CX            ICOMP=0
CX            CALL GETVAL (ITERM,VALUE,NVAL,IRC)
CX            IF (IRC.EQ.1) GOTO 999
CX            IF (IRC.EQ.2) GOTO 15
CX            IF (NVAL.GT.0) ICOMP=INT(VALUE(1))
CX            IF (ICOMP.EQ.0) THEN
CX               CALL COMPRESS (BUFF,NPIX,NRAST,IFPIX,ILPIX,IFRAST,ILRAST)
CX            ENDIF
CX         ENDIF
CX      ENDIF
C
C========WHICH VIEWING DIRECTION
C
10    AZIM=45.0
      WRITE (IPRINT,1010) AZIM
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 10
      IF (NVAL.GT.0) AZIM=VALUE(1)
cx      IF (AZIM.LT.0.OR.AZIM.GT.3) THEN
cx         CALL ERRMSG ('Error: Invalid viewing direction')
cx         GOTO 10
cx      ENDIF      
C
C========WHICH VIEWING ANGLE
C
20    ANGLE=35.2644
      WRITE (IPRINT,1020) ANGLE
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 20
      IF (NVAL.GT.0) ANGLE=VALUE(1)
      IF (ANGLE.LT.-90.0.OR.ANGLE.GT.90.0) THEN
         CALL ERRMSG ('Error: Invalid viewing angle')
         GOTO 20
      ENDIF      
C
C========WHAT X Y PITCH
C
25    PITCH=1.0
      WRITE (IPRINT,1030) PITCH
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 25
      IF (NVAL.GT.0) PITCH=VALUE(1)
      IF (PITCH.LE.0.1) THEN
         CALL ERRMSG ('Error: Invalid XY pitch')
         GOTO 25
      ENDIF      
C
C========DRAW UNDERSIDE OF PROJECTION
C
28    IUNDR=1
      WRITE (IPRINT,1040) 
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 28
      IF (NVAL.GT.0) IUNDR=INT(VALUE(1))
C
C========FIND THE MINIMUM & MAXIMUM VALUES OF THE BUFFER
C
      INDEX=NPIX*(IFRAST-1)+IFPIX
      RMIN=BUFF(INDEX)
      RMAX=BUFF(INDEX)
      DO 40 I=IFRAST,ILRAST
         DO 30 J=IFPIX,ILPIX
            IF (BUFF(INDEX).LE.RMIN) RMIN=BUFF(INDEX)
            IF (BUFF(INDEX).GT.RMAX) RMAX=BUFF(INDEX)
            INDEX=INDEX+1
30       CONTINUE
         INDEX=INDEX+NPIX-(ILPIX-IFPIX)-1
40    CONTINUE
C
C========SELECT THRESHOLD VALUES OR <CTRL-Z> TO QUIT
C
      TMIN=RMIN
      TMAX=RMAX
50    WRITE (IPRINT,1050) TMIN,TMAX
      CALL GETVAL (ITERM,VALUE,NVAL,IRC)
      IF (IRC.EQ.1) GOTO 999
      IF (IRC.EQ.2) GOTO 50
      IF (NVAL.GT.0) TMIN=VALUE(1)
      IF (NVAL.GT.1) TMAX=VALUE(2)
      IF (ICALL.EQ.0) THEN
C
C========INITIALISE THE PLOTTER
C
         CALL GRMODE
         CALL PLOTON
         CALL PSPACE (0.25,1.1,0.175,0.9)
         CALL CTRMAG (20)
      ENDIF
C
      CALL SURROT (AZIM)
      CALL SURANG (ANGLE)
      CALL SURSCA (TMIN,TMAX,PITCH)
      CALL SURBAS (IUNDR,0,DUMMY)
      CALL SURAXE (1,DUMMY,DUMMY,DUMMY,DUMMY)
      CALL SURIND (1)
C
C======PLOT FRAME
C
      ICALL=1
      CALL ERASE
      CALL SURPLT (BUFF,IFPIX,ILPIX,NPIX,IFRAST,ILRAST,NRAST)
      CALL PICNOW
C
      CALL TRMODE
      GOTO 10
999   IF (ICALL.NE.0) CALL SAVPLO (ITERM,IPRINT)
C 
1000  FORMAT (' Enter first & last pixels/rasters [1,',
     1        I3,',1,',I3,'] : ',$)
1010  FORMAT (' Enter azimuthal viewing angle [',G10.4,']: ',$)
1020  FORMAT (' Enter elevation viewing angle (-90 to 90) ',
     1'[',G10.4,']: ',$)
1030  FORMAT (' Enter XY pitch [',G10.4,']: ',$)
1040  FORMAT (' Enter (0) for drawing underside or default [1]: ',$)
1050  FORMAT (' Enter threshold values [',G10.4,',',G10.4,'] : ',$)
C 
      END
